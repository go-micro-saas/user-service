// Package po
// Code generated by ikaiguang. <https://github.com/ikaiguang>
package po

import (
	enumv1 "github.com/go-micro-saas/user-service/api/user-service/v1/enums"
	datatypes "gorm.io/datatypes"
	time "time"
)

var _ = time.Time{}

var _ = datatypes.JSON{}

// User ENGINE InnoDB CHARSET utf8mb4 COMMENT '用户表'
type User struct {
	Id            uint64                                       `gorm:"column:id;primaryKey" json:"id"`              // ID
	CreatedTime   time.Time                                    `gorm:"column:created_time" json:"created_time"`     // 创建时间
	UpdatedTime   time.Time                                    `gorm:"column:updated_time" json:"updated_time"`     // 最后修改时间
	DeletedTime   uint64                                       `gorm:"column:deleted_time" json:"deleted_time"`     // 删除时间
	UserId        uint64                                       `gorm:"column:user_id" json:"user_id"`               // uid
	UserPhone     string                                       `gorm:"column:user_phone" json:"user_phone"`         // 手机
	UserEmail     string                                       `gorm:"column:user_email" json:"user_email"`         // 邮箱
	UserNickname  string                                       `gorm:"column:user_nickname" json:"user_nickname"`   // 昵称
	UserAvatar    string                                       `gorm:"column:user_avatar" json:"user_avatar"`       // 头像
	UserGender    enumv1.UserGenderEnum_UserGender             `gorm:"column:user_gender" json:"user_gender"`       // 性别；0：INIT，1：MALE，2：FEMALE，3：SECRET
	RegisterType  enumv1.UserRegisterTypeEnum_UserRegisterType `gorm:"column:register_type" json:"register_type"`   // 注册类型；0：INIT，1：EMAIL，2：MOBILE，3：。。。参考ENUM定义
	UserStatus    enumv1.UserStatusEnum_UserStatus             `gorm:"column:user_status" json:"user_status"`       // 状态；0：INIT，1：ENABLE，2：DISABLE，3：WHITELIST，4：BLACKLIST，5：DELETED
	DisableTime   uint64                                       `gorm:"column:disable_time" json:"disable_time"`     // 禁用时间
	BlacklistTime uint64                                       `gorm:"column:blacklist_time" json:"blacklist_time"` // 黑名单时间
	PasswordHash  string                                       `gorm:"column:password_hash" json:"password_hash"`   // 密码HASH
}

func (s *User) IsValidStatus() bool {
	switch s.UserStatus {
	default:
		return true
	case enumv1.UserStatusEnum_DISABLE, enumv1.UserStatusEnum_BLACKLIST, enumv1.UserStatusEnum_DELETED:
		return false
	}
}
